// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id        Int     @id @default(autoincrement())
  firstName String
  lastName  String
  phone     String?
  email     String  @unique
  password  String?
  age       Int?
  gender    String?
  motif     String?

  Appointment Appointment[]
}

model Doctor {
  id             Int            @id @default(autoincrement())
  firstName      String
  lastName       String
  email          String         @unique
  password       String?
  speciality     String
  qualifications String?
  Availability   Availability[]

  Appointment Appointment[]
}

model Appointment {
  id        Int       @id @default(autoincrement())
  dateTime  DateTime
  status    String?
  patient   Patient   @relation(fields: [patientId], references: [id])
  patientId Int
  doctor    Doctor    @relation(fields: [doctorId], references: [id])
  doctorId  Int
  Comment   Comment[]
}



model Comment {
  id            Int         @id @default(autoincrement())
  content       String
  rating        Int
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
  appointmentId Int
}

model Admin {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String?
}

model Availability {
  id         Int      @id @default(autoincrement())
  doctor     Doctor   @relation(fields: [doctorId], references: [id])
  doctorId   Int
  date       DateTime
  heureDebut DateTime
  heureFin   DateTime
}
